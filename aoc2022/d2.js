const games = `B X
C Y
A X
B X
B Y
B X
A Z
A Z
A X
C X
C X
B X
B X
C X
C Y
A Z
B Y
C Y
C X
B X
B X
C Y
A Z
A Z
C X
A Z
A Z
B X
A X
C Y
B Y
C X
B Y
B X
B X
A X
B Y
A Z
A Z
A Z
A Z
C X
B X
B Z
B X
C Y
B X
A Z
B X
A Z
A Z
A Z
C Y
C Y
C Y
A X
B X
B X
B Y
A Z
B Y
B X
B Y
A Z
C X
B X
A Z
B X
A Z
C Y
B X
C Y
A Z
C X
C Y
C X
C Y
C X
A X
A X
B Y
A X
A Y
A X
C Y
C Y
A Z
B Y
A Z
C Y
A Z
B X
A X
B X
C Y
A Y
B X
B X
C Y
A X
A X
C Y
B Y
A Z
A X
C Y
C X
A Z
B Y
B X
B Z
C X
B Y
C X
B Z
C X
A Z
C X
C Y
C Y
B Y
B Y
C Y
A X
B Y
A Z
B X
C X
C Y
B X
A X
C Z
A Z
B Y
A X
B X
A X
B X
B Y
B X
B Y
B Y
C Y
B X
B Y
B X
B X
A Z
C Y
B Y
A Z
C X
B X
B X
B Y
B X
C Y
A Z
A Z
C Y
C Y
A X
A Z
A Z
C X
A Z
B Y
A Z
A Y
B X
A Z
C Y
C Y
B X
A Z
B X
A X
A X
B Z
C Y
C Y
C Y
C X
C Y
B X
B X
B Y
A X
B X
B X
C X
A X
C Y
B X
A Z
B Y
A Z
B Y
B X
A Y
C Y
C X
B Z
C Y
B Y
B Y
B X
C Y
B X
C Y
A Z
A X
B X
A Z
C Y
C X
C Y
B Y
B Y
A Z
C Y
B X
B X
B X
A Z
C X
A Z
B X
A Z
B X
B X
B X
B Y
C X
A Z
B X
B X
C Y
A X
B Y
B X
A Z
A Z
B X
C Y
A Z
A Z
B X
B Y
B Y
B X
A Z
C X
A Z
A X
C Y
B Z
A Z
A Z
A Z
A X
C Y
B X
C Y
A Z
A Z
C Y
B X
A Z
A X
A Y
A Z
B Y
C Y
B Y
A Z
A Z
C Y
C Y
A Z
A Z
C X
A Z
A Z
C X
C Y
B X
B Y
B Y
B X
C Y
A X
C X
A X
B X
C Y
C Y
C X
B Z
A X
A Z
C Y
C Y
C Y
B X
B Y
A Z
A Z
C X
B X
A Z
C Y
B Z
B X
A X
A Z
A X
B X
B X
A Z
A Z
B Y
B Y
B Y
B X
A Z
B X
C X
B Y
B Z
A Z
C X
C Y
B Y
A X
C X
A Z
B X
A X
A Z
B X
C X
B X
A Z
B Y
B Z
A X
C Y
A Z
B Y
B Z
C X
B X
C Y
C Y
B X
A X
B X
B Y
A Z
C Y
A Z
C Y
A Z
A X
B Z
C X
C Y
B X
C X
B Z
B X
C Y
A Z
A Z
C Y
B X
A Z
C Y
A X
B Y
A Z
B X
A Z
A Z
C Y
B X
A Z
A Z
C Y
B Y
B Y
C X
C Y
B Y
C X
B Y
A Z
C Y
B Y
A Z
B X
B X
A Y
B X
B X
B Y
B Y
C X
C Y
A Z
C X
A Z
A Z
A Y
A Z
B Z
C Y
C Y
C Y
C X
C Y
C Y
B X
C Y
C X
B X
C Y
C X
C Y
A Z
C Y
B Z
C X
A Z
C Y
C X
B X
B Z
C Y
C Y
B X
B Y
A X
B Y
A Z
C Y
C X
C X
A X
B Y
A Z
B Y
C Y
B Y
B Y
A X
C X
A Z
C X
A Z
B X
A X
A Z
B X
A X
B X
C Y
B Y
B X
C X
C Z
A Z
B Y
B X
A X
B Y
C Y
C Y
A X
C X
B Z
A Z
A Z
B X
A Z
C X
B Z
B Z
C Y
C Y
B Y
C Y
A Z
C Y
B X
B X
B X
A Y
A Z
A Z
A Z
C Y
B Y
B Y
C Y
A Z
A Z
A Y
C Y
C Y
A Z
C X
B X
A Z
C Y
C Y
A X
A Z
C X
A X
B Z
B X
B X
A Z
C Y
B Y
A Z
A Z
C Y
A Z
A X
C X
A Z
B X
C X
C Y
B Z
C Z
A Z
A X
C X
B Y
C Y
A X
B Y
A Z
B X
B Y
A X
C X
A Z
A Z
B X
A X
A X
C Y
B Y
A Z
C X
A Z
B Y
A Y
C Y
B X
C X
B X
B X
A Z
B X
C X
C Y
A Z
C Y
A Z
B Z
B Z
A Z
A Z
A Z
A Z
C Y
C Y
A Z
A Z
B Y
A Z
A Z
A X
C Y
C Z
A X
C X
B X
B X
A Z
C Y
A Z
A Z
B X
A Z
C Y
B Z
A Z
A Z
A Y
C X
A Z
B Y
B Y
C X
B X
C X
A X
C Y
A X
C X
A Z
B X
B X
A Z
B X
A Z
A X
B X
A Z
B X
C Z
B X
C Z
A Z
B X
C Y
A Z
B X
B X
B Y
C Y
A Z
A Z
C X
C Y
A Z
C Y
A Y
C Y
B Y
B Y
B X
C X
A Z
C Y
A Z
C Y
C X
A Y
C Y
C X
A Z
C Y
B X
A Z
A Z
B Y
C X
A Z
A Z
B Y
C Z
A Z
B X
B X
B Y
A Y
A X
A Z
B Y
C X
C X
B Z
B Y
A Z
B Z
C Y
B X
A X
C X
A Z
A Z
B Y
B Y
B X
C Y
A X
C X
C Z
C X
B Y
B Y
A Z
B X
A Z
A Z
C Y
C Y
A X
C X
C Y
C X
A Z
B Z
B Y
C X
A Z
B X
B X
A X
A Z
B Z
B X
A Z
A Z
A Z
B X
C Y
B X
A X
A X
C Y
A Z
C Y
B X
A Z
B X
B Y
B Y
A Z
B X
B Y
C Y
B X
B Y
B Y
B Y
A Z
C Y
B X
B Y
C Y
C X
B X
C X
A Z
C Y
A Z
A Z
C Y
B Y
A Z
B Y
B Y
B Z
B X
B X
B X
A X
C Y
B X
B X
B X
B X
B X
A Z
A Z
A Z
A Z
A Z
C Y
B Y
C X
A Z
C Y
B X
C Y
C X
A Z
A Z
B X
C Y
C Y
A Z
B X
A Z
B Y
B Y
C Y
C Z
C Y
B Y
B X
C X
C Y
B X
B X
A X
C Y
A Z
B Y
A X
C Y
A Z
A Z
A X
A Z
A X
B Y
C Y
B X
C Y
A X
C X
C X
B Y
A Z
C Y
C Z
C Y
C Y
C X
C Y
A Z
A Z
B X
C X
A Y
B X
C X
C X
B Y
A Y
A Z
C X
C X
C Z
B X
A X
C Y
A Z
B X
A Z
B X
B X
C X
B X
B X
A X
B X
B X
C Y
B Y
A Y
B X
B Z
C X
A Z
C Y
A X
C Y
C Y
B X
B X
C Y
C Y
C Y
A Z
A Z
C X
C X
B X
C Y
C Y
B X
C Y
A Z
A Z
C Y
C X
A Z
A Z
B X
B Y
C X
B X
B Z
A Z
B X
B X
B X
C Y
A Y
A Z
B Z
B X
B X
B Y
A Z
B Y
B X
A X
A Z
C Y
B X
C Y
C Y
A Z
A Z
B Z
A Z
B X
C Y
B Y
B Z
B Y
A Z
C Y
C Y
B Y
C X
C Y
A Z
C X
A Z
B X
B Y
A Z
B Z
C X
C Y
B Y
C Y
B Y
A Z
C X
B X
A Z
B X
B X
B X
A X
C X
B Y
C X
A Z
C Y
B X
A Z
A Z
A X
B Y
A Z
A Z
C X
A Z
B Y
A X
B X
B Y
A Z
B Z
B X
A Z
C Y
A X
A Z
C Y
C X
C Y
C X
A Z
A Z
A Z
C Z
C X
C Y
A Z
C Y
C Y
C Z
C Y
C Y
A X
A X
A Z
B X
B Z
A Z
B X
A Z
A Z
C X
A Z
B Y
A Z
B Z
A Z
C X
A Z
B Z
A X
C Y
B Y
C Y
C X
C Y
C X
A Z
C Y
C Y
C Y
C Y
A Z
B Z
B Y
B X
B X
C Y
A Z
A Z
A X
C X
A Z
B X
A Z
B X
C Y
C X
A Z
B X
C Y
A X
B Y
C Y
C X
A X
C Y
A Z
B X
C X
A X
B Y
B Z
A Z
A Z
A X
A Z
C X
A Z
B X
B X
C Y
B X
B X
A Z
B X
A Z
B X
B Z
A Y
A X
A Z
C X
A Z
A Z
B X
B X
B Y
B Y
A X
C X
A Z
C X
A Y
A Z
C X
B Y
A Z
C Y
A Z
A Z
C Y
A Z
A Z
A Z
A Z
B X
C Y
B Y
A X
B X
A Z
B Y
B X
B Y
B Y
C Y
C X
C X
B Y
C Y
A Z
B X
C X
B Z
A Z
C X
B X
C Y
C X
A Z
C X
C Y
B X
C X
C Y
B Y
A X
A Z
C X
C X
B X
B X
B X
C Y
B X
B X
B Y
B Y
B X
C X
C Y
B X
B X
B X
A Y
B Z
C X
C Y
C Y
B X
B X
A Z
A X
C Y
B X
C X
B X
B Y
A X
C Z
C Y
A Z
B Y
B Y
A Z
C X
C X
A Z
B Y
A Z
B X
A Z
C Y
C Y
B Y
A Z
A Z
A Z
C Y
C Y
A X
C X
B Y
C Y
C Y
C X
A Z
A Z
C X
C Y
A X
B X
A X
B Y
A X
A Z
A Z
C Y
A Z
B X
C X
A Z
A Z
A Z
C Y
C X
A Z
C Y
C Y
B X
B X
C X
B X
C X
A Z
B X
B Z
B X
B X
C Y
A X
A Z
B X
A Z
C Y
A Z
C Z
A Z
C Z
C X
A Z
B Z
A Z
C Y
B X
C Y
A Y
C Y
C X
B X
B Y
C X
A Z
B Z
A Z
B Y
B X
A X
B X
B Z
C Y
B Y
C Y
C X
B X
C Y
C Y
A Y
C Y
B X
B X
A Z
B X
B Z
C X
A Z
C Z
C Y
A Z
A Z
B Z
C X
A Z
C Y
A Z
A Z
B X
B Y
B Z
C X
C Y
B X
A Z
B X
A Z
B X
A Z
B X
A X
C Y
B Y
C Y
B X
A Z
B X
C Y
B Y
B Y
B X
A Z
B X
C Y
A X
A Y
B X
A Z
A Z
B Y
A Z
A Z
C Y
B Y
A Z
C Y
C Y
C Y
B Y
A Z
B X
A Z
C Z
A Z
A Y
B Z
C Y
A Z
C Y
C X
B Y
A Z
A Z
B X
A X
A Z
B X
A Z
C Y
C X
A Z
A Z
C X
A X
A Z
C Y
A Z
A Z
C X
C Y
B X
B Y
B Y
C Y
C Z
B Z
C X
C Y
A X
A Z
B X
B Y
B Y
C X
B Z
B Y
B X
B Y
C X
C Y
B X
B Y
B X
C X
C Y
C X
A Z
B Z
B Z
C X
C X
B X
C X
B X
C Y
C Y
C Y
B X
C Y
C X
A X
A Z
A X
A Z
B X
B X
A Z
A X
B Y
A Z
B X
A Y
B X
C Y
A Y
A Y
B X
B Y
C Z
C Y
B Y
B Y
B X
A Z
A Z
B X
A X
B X
B Y
B X
B X
A Z
C X
A Z
A X
A Z
B Z
B X
A Z
C X
A X
B Y
C X
B X
C X
A Y
A Z
B Y
C Y
A Z
A Z
A Z
A Z
A X
A Z
B X
A Z
C X
A Z
B Y
C Y
A Z
B X
A Z
C Y
B X
C Z
B Y
C X
A Z
A X
C Y
B Y
B X
C Y
C X
A Z
B X
C Y
A Z
A Y
C Y
B X
C X
B Y
A X
C Y
B X
C Y
A Z
A Z
A Z
C Y
B Z
B X
A Z
A X
B X
C X
B X
A Z
B X
B X
B Y
B X
A Z
C X
B X
A Z
A Z
C X
A X
A X
B X
B Y
A Z
C Y
C Y
B X
B X
A X
A Z
A Z
A X
B X
A Z
B Y
C X
B X
B X
C Y
A Z
B X
A X
C Y
C Y
C Y
A Z
B Y
C Y
C Y
C X
A Z
B Y
B X
B Y
B X
C Y
C Y
A X
B X
B X
C Z
C Y
B Z
A Z
B X
B X
B Y
C Y
C Y
A Z
C X
B X
B X
A Z
B Y
B Z
B X
A Z
A Z
A Z
C X
C Y
C X
C X
A X
C X
C Y
A X
B X
A Z
A X
B Y
B X
A Z
A Z
C Y
B Y
A Z
B X
C X
A Z
A Z
C X
B X
C Y
B X
B X
C Y
A Z
A Z
A Z
A X
A X
B X
A Z
B X
A X
C Y
C X
C X
A X
A Z
C Y
B X
A Z
A Z
A X
A Z
B Y
C X
B X
C X
C X
C X
A X
C Y
A Z
C Y
B X
B X
B X
C Y
C Y
A Z
A Z
C Y
A Z
B Y
B X
A Z
B Y
C Y
A Z
C X
B X
C Y
C Y
C X
C X
A Z
B X
A Z
B X
C X
B X
C Y
C Z
C X
C Y
A Z
A Z
A Z
B Z
B X
A Z
A Z
B X
A X
B Y
B X
C Y
C Y
A Z
B X
C Y
A X
A Z
B Z
A Z
C X
B Y
B Y
A Z
A Z
C Y
B X
C Z
C X
A Z
A Z
B X
B X
A X
B Y
C X
A Z
C Y
A X
B X
A Z
B Y
B X
B Y
A Z
B Y
C X
A Z
B X
A Z
C Z
A Z
A X
B X
C Y
A Z
A Z
A Z
C X
B X
A Z
A Z
B X
A Z
A Z
B Z
A Z
C Y
B X
C Y
C Y
C X
B X
A Z
B Y
A Z
C X
B X
C Y
A Z
B X
B Y
C X
C Y
A X
C Y
B Z
C X
B X
C X
B X
A Z
B X
A Z
B Y
B X
A Z
B Z
A X
B Y
B X
C X
C X
B X
B Y
C Y
B X
C X
C X
C Y
A Z
C X
A Z
C Z
C X
B X
B X
A Z
A X
A Z
C X
A Z
B X
A Z
B Y
A Z
A Z
A Z
B Y
A Z
A X
A Z
C Y
A Z
C Y
A Z
A Z
C Y
A Z
A Z
C Y
B Y
A Z
A Z
A X
C X
B X
A Y
B Y
A Z
C Y
C Y
A Y
C Y
B Y
B X
A Z
B Y
C X
A Z
A Z
A Z
B Z
A Z
C Y
B X
B X
C Y
A Z
C Y
A Z
A X
A Z
B Z
C Y
B X
C Y
A Z
C Y
B X
C Y
B Z
B X
A Z
C Y
A Z
C Z
A Z
C X
B X
A X
A X
B Y
A X
B Z
B X
A Z
B Y
B X
A Z
A Z
A Z
C X
A Z
B Y
C Y
A Z
C X
A Y
A Z
B Z
B Z
C Y
A X
B X
B Y
C Y
C Y
A X
A Z
C X
C Y
C Y
B Y
B X
A Z
B X
A Z
A Z
B X
B Y
B X
A X
C Y
B X
B Z
A Z
A X
C X
B Y
C Z
B X
A X
B Y
A Z
C Y
C Y
A X
C Y
B X
A Z
A Z
A Z
A Y
B X
B X
A Z
C X
A Z
C Z
B Z
A Z
B X
A Z
C Y
B Y
B X
A Z
C Z
B Y
A Y
B X
B Y
A Z
C Y
B X
A Z
B X
C Y
A X
C X
A Z
A X
A X
A X
C Y
C X
A Z
A Z
C Y
B X
B Y
B X
B Y
A Z
C Y
B Y
B X
A Y
B Y
A Z
B X
B X
A Z
C X
B Y
A Z
A X
C X
C X
A Z
C Y
B Y
A Z
A Z
C Y
C X
A Z
C X
B X
C Y
C X
C Y
B X
B Y
C X
A Z
A Z
C Z
A Z
A Z
C X
C X
B X
B X
C X
B Y
A Z
C Y
C X
B Z
B X
B X
C X
B X
A Z
C Y
A X
B Y
B X
C X
B X
C Y
B X
B Y
A Z
C Z
C X
B Y
A Z
B Z
C Y
B Y
A Z
A Z
B X
B X
B Y
A Z
B X
B Z
A Z
C Y
C Y
A Z
B Z
C Y
C Y
C X
B X
B X
C Y
B X
C X
C X
A X
C Y
B Y
A Z
C Y
A X
A Z
A Z
C Y
C Y
B Y
B Y
A X
A Z
B X
A X
A X
B Y
B Y
B X
C X
A Z
A Z
B Y
C Y
C X
B Y
B Y
A X
B X
C Y
B X
A Z
A Z
C Z
A Z
B Z
B Z
B X
A X
C Y
B X
B X
C X
A Z
B X
C X
C Y
C Y
A Z
A Y
C Y
C Y
B X
A Y
B Z
A Z
A Z
C X
C Y
A Z
A Z
B X
B Y
A Z
A Y
B X
C Y
A Z
B Y
B X
B X
B X
A Z
A Z
A X
B Z
B Z
A X
C Y
C Y
B X
A Z
A X
A Z
C X
A Z
C Y
A Z
A Z
B X
A Z
C X
C Y
C X
B Y
C Y
B X
A Z
B Y
A Z
A Z
A Z
C X
C X
B Z
B Z
B X
B Y
A Z
C X
C Y
A X
C Z
A Z
B X
C X
B X
A Z
B X
A Z
C X
A X
B X
B X
A Z
B X
B X
C Z
B Z
B X
A Y
C X
B X
B Y
B Z
C Y
B X
C X
C Y
A X
B X
C X
C X
B X
A Z
C Y
B X
A X
A Z
B X
B X
C X
A X
A X
A X
C Y
A Z
C X
A Z
C X
C X
A Z
C Y
A Z
B Y
A Z
B X
C X
A Z
C X
B Z
B X
A X
C X
C X
C Y
C Y
B X
B Y
B X
C Y
C X
C Y
B Y
A Z
B Z
C Y
C Y
A Z
B X
C Y
A Z
A Z
A X
B X
A Z
B X
A X
C X
B Y
B X
A Z
C X
C X
B X
C Y
C Y
C Y
A Z
B X
A Z
B Y
A X
B X
A Z
B Y
B Y
B X
C X
A X
B Y
A Z
B X
C X
B X
A Z
C Y
A Z
A Z
B X
B X
A X
A X
C Z
C X
B Z
C Y
A Z
C Y
C Y
A Z
B X
C Z
C X
B X
C X
A Z
C Y
C Y
B X
A Z
C X
B X
B X
A X
C Y
B X
A Z
A Z
B X
B X
B Y
A Z
A Z
B Y
B X
C X
B X
A X
A Z
A X
B X
B X
C Y
A Z
A X
C Y
B X
C X
C X
C X
C X
B Z
B Y
C X
A X
C Y
C Y
C X
B X
B Y
B X
B X
B X
C X
B X
B X
C Y
C Z
B X
C Z
A Z
A Z
C Y
B Z
B Y
A Z
A Y
C Y
B X
C Y
A Z
B Y
C Y
C Y
A Z
A Z
C Z
A X
A Y
B Y
A Z
A Z
A X
C Y
B Y
A Z
A Z
B Y
C Y
C Y
A Z
A Z
B Y
A Z
B X
A X
A Z
B Y
C Y
C X
A X
C X
C Y
B X
B X
A Z
C Y
B X
B Y
C Y
A X
B Z
B Y
C Y
C Y
A Z
A Z
A X
C Y
A Z
B X
A Z
C X
C X
C Y
C X
B X
C X
A Z
B X
B X
B Y
B X
C Y
A Z
B Y
B X
C X
C Y
C Y
A Z
A Z
B Z
B X
A Z
C Y
A Z
B X
A Z
A Z
B X
B Y
A Z
B Z
C Y
A X
C Y
C Y
B Y
B Y
B X
C X
A Z
B Z
A X
C Y
B X
A Z
A Z
C Y
B X
C X
B X
A Z
C Y
A Z
B Z
A Z
A Z
A Z
B X
C Y
C Y
C Y
A Y
C X
C Y
B Y
A Z
C Y
A X
A X
C Y
A X
B Y
C X
C Y
A Z
C Y
A X
B Y
C Y
B Y
B X
B X
C Y
A Z
C X
A Z
C Y
A Z
C Z
A Z
C Y
A Z
C X
A X
C Y
B Y
C Y
C X
A Y
A Z
C Z
A Z`


// get choice value of game (e.g. "X" => 1 point)
const CHOICES = ["X", "Y", "Z"]
const choiceValue = (choice) => CHOICES.indexOf(choice) + 1

// get outcome value of game (e.g. "B", "X" => draw => 3 points)

const OUTCOMEPOINTS = [3, 0, 6] // draw, lose, win
const outcomeValue = (game) => OUTCOMEPOINTS.at((game[1].charCodeAt(0) - game[0].charCodeAt(0) - 23)*(-1)) //* / [ 'B', 'X' ] => lose => OUTCOMEPOINTS[1] / OUTCOMEPOINTS[-2]

// clean games into array of arrays
const gamesArr = games.split('\n').map(game => game.split(" "))

// calculate points
let points = 0
gamesArr.forEach(game => {
  points += outcomeValue(game) + choiceValue(game[1])
});

// console.log(points) // => 8933 ✅

// ___________________________________________________________________________________________________________________
//*
// using ASCII values, e.g. "A" = 65
// same signs, e.g. double rock, i.e. "A", "X" are 23 letters apart => "X" - "A" - 23 = 0. "X" - "B" - 23 = -1 etc..
// make use of draw, lose and win values will differ, since alphabet wraps around
// so do indeces of arrays => ["draw", "win", "lose"]



// console.log(("X".charCodeAt(0) - "A".charCodeAt(0) - 23)*(-1)) // 0 => Rock v Rock => Draw
// console.log(("X".charCodeAt(0) - "B".charCodeAt(0) - 23)*(-1)) // 1 => Rock v Paper => Lose
// console.log(("X".charCodeAt(0) - "C".charCodeAt(0) - 23)*(-1)) // 2 => Rock v Scissor => Win
// console.log("-------")
// console.log(("Y".charCodeAt(0) - "B".charCodeAt(0) - 23)*(-1)) //  0 => Paper v Paper => Draw
// console.log(("Y".charCodeAt(0) - "C".charCodeAt(0) - 23)*(-1)) //  1 => Paper v Scissor => Lose
// console.log(("Y".charCodeAt(0) - "A".charCodeAt(0) - 23)*(-1)) // -1 => Paper v Rock => Win
// console.log("-------")
// console.log(("Z".charCodeAt(0) - "C".charCodeAt(0) - 23)*(-1)) //  0 => Scissor v Scissor => Draw
// console.log(("Z".charCodeAt(0) - "A".charCodeAt(0) - 23)*(-1)) // -2 => Scissor v Rock => Lose
// console.log(("Z".charCodeAt(0) - "B".charCodeAt(0) - 23)*(-1)) // -1 => Scissor v Paper => Win

// --- PART 2 ---

const ENDINGS = CHOICES // ["X", "Y", "Z"] lose, draw, win
const CHOICES2 = ["A", "B", "C", "A", "B", "C"]

const outcomeValue2 = (ending) => ENDINGS.indexOf(ending) * 3 // 0, 3, 6 for X, Y, Z / lose, draw, win

const choiceValue2 = (choice) => CHOICES2.indexOf(choice) + 1


const calcPoints = (games) => {
  let points2 = 0
  games.forEach(game => {
    // per lose, draw, win -> opponent choice (A,B,C) + 1, 0, 2
  let opponentsChoice = game[0] // A, B or C
  let indexOfOpponentsChoice = CHOICES2.indexOf(opponentsChoice) // 0, 1, 2
  let ending = game[1] // X, Y, Z
  let indexOfEnding = ENDINGS.indexOf(ending) // 0, 1, 2
  let choice;
  // lose: X -> index 0, get
  switch (ending) {
    case "X":
      choice = CHOICES2[indexOfOpponentsChoice + 2];// lose -> +2
      break;
    case "Y":
      choice = opponentsChoice; // draw -> +0
      break;
    case "Z":
      choice = CHOICES2[indexOfOpponentsChoice + 1]; // win -> +1
      break;
  }
  points2 += outcomeValue2(ending) + choiceValue2(choice)
  });
  return points2
}

console.log(calcPoints(gamesArr))

// --- TESTING ---
// In the first round, your opponent will choose Rock (A), and you need the round to end in a draw (Y), so you also choose Rock. This gives you a score of 1 + 3 = 4.
// In the second round, your opponent will choose Paper (B), and you choose Rock so you lose (X) with a score of 1 + 0 = 1.
// In the third round, you will defeat your opponent's Scissors with Rock for a score of 1 + 6 = 7.
console.log(calcPoints([["A","Y"]]) == 4)
console.log(calcPoints([["B","X"]]) == 1)
console.log(calcPoints([["C","Z"]]) == 7)


// console.log(CHOICES2.indexOf("C"))
// console.log(gamesArr)


// [ 'B', 'X' ], [ 'C', 'Y' ], [ 'A', 'X' ], [ 'B', 'X' ], [ 'B', 'Y' ]
// lose, draw, lose, lose, win
